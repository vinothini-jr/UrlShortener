./manageprofiles.sh -create -profileName profile1 -profilePath /opt/IBM/WebSphere/AppServer/profiles/profile1 -profileTemplates /opt/IBM/WebSphere/AppServer/profileTemplates/default/



./manageprofiles.sh -create -profileName Dmgr -profilePath /opt/IBM/WebSphere/AppServer/profiles/Dmgr -templatePath /opt/IBM/WebSphere/AppServer/profileTemplates/dmgr/ -cellName Cell01 -nodeName CellManager01



./manageprofiles.sh -create -profileName profile2 -profilePath /opt/IBM/WebSphere/AppServer/profiles/profile2 -profileTemplates /opt/IBM/WebSphere/AppServer/profileTemplates/managed/
const fs = require('fs');
const child_process = require('child_process');

for(var i=0; i<3; i++) {
   var workerProcess = child_process.exec('node support.js '+i,function 
      (error, stdout, stderr) {
      
      if (error) {
         console.log(error.stack);
         console.log('Error code: '+error.code);
         console.log('Signal received: '+error.signal);
      }
      console.log('stdout: ' + stdout);
      console.log('stderr: ' + stderr);
   });

   workerProcess.on('exit', function (code) {
      console.log('Child process exited with exit code '+code);
   });
}






const fs = require('fs');
const child_process = require('child_process');
 
for(var i = 0; i<3; i++) {
   var workerProcess = child_process.spawn('node', ['support.js', i]);

   workerProcess.stdout.on('data', function (data) {
      console.log('stdout: ' + data);
   });

   workerProcess.stderr.on('data', function (data) {
      console.log('stderr: ' + data);
   });

   workerProcess.on('close', function (code) {
      console.log('child process exited with code ' + code);
   });
}






const fs = require('fs');
const child_process = require('child_process');
 
for(var i=0; i<3; i++) {
   var worker_process = child_process.fork("support.js", [i]);	

   worker_process.on('close', function (code) {
      console.log('child process exited with code ' + code);
   });
}




